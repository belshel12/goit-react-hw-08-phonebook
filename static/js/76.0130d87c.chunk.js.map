{"version":3,"file":"static/js/76.0130d87c.chunk.js","mappings":"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","sources":["redux/Contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilterValue = state => state.filter;\n","import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  width: 400px;\n  padding: 16px;\n  border: 1px solid #f5f4fa;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.17;\n  letter-spacing: 0.03em;\n`;\n\nexport const FormField = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 8px;\n\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  outline: none;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    border-color: #ffb74d;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n\n  &:focus {\n    border-color: #ffb74d;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  padding: 4px 16px;\n  text-align: center;\n  color: tomato;\n`;\n\nexport const Button = styled.button`\n  padding: 6px 12px;\n  margin-top: 12px;\n\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.15);\n  outline: none;\n\n  background-color: #ffa726;\n  color: #141210;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    scale 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #ffa726;\n    color: #fff;\n    scale: 1.05;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/Contacts/operations';\nimport { getContacts } from 'redux/Contacts/selectors';\nimport * as Yup from 'yup';\nimport {\n  Form,\n  FormField,\n  Field,\n  ErrorMessage,\n  Button,\n} from './ContactForm.styled';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nlet ContactFormSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .min(2, 'Too Short!')\n    .required('Required'),\n\n  number: Yup.string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .min(8, 'Too Short!')\n    .max(17, 'Too Long!')\n    .required('Required'),\n});\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = (values, actions) => {\n    if (contacts.find(({ name }) => name === values.name)) {\n      toast.warn(`${values.name} is already in contacts`);\n      actions.resetForm();\n      return;\n    }\n    dispatch(addContact(values));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={ContactFormSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormField>\n          Name\n          <Field name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormField>\n        <FormField>\n          Number\n          <Field type=\"tel\" name=\"number\" />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </FormField>\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 24px;\n\n  font-size: 20px;\n  line-height: 1.17;\n  letter-spacing: 0.03em;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nexport const NameContainer = styled.div`\n  display: flex;\n  gap: 12px;\n`;\n\nexport const ContactName = styled.p`\n  font-weight: 600;\n  margin: 0;\n`;\n\nexport const DeleteBtn = styled.button`\n  padding: 4px 16px;\n\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.15);\n  outline: none;\n\n  background-color: #4e4b42;\n  color: #fff;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    scale 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #ffa726;\n    color: #4e4b42;\n    scale: 1.05;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { NameContainer, ContactName } from './ContactList.styled';\n\nconst ContactListItem = ({ name, number }) => {\n  return (\n    <NameContainer>\n      <ContactName>{name}:</ContactName>\n      <span>{number}</span>\n    </NameContainer>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport { ContactListItem };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilterValue } from 'redux/Contacts/selectors';\nimport { deleteContact } from 'redux/Contacts/operations';\nimport { ContactListItem } from './ContactListItem';\nimport { List, Item, DeleteBtn } from './ContactList.styled';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getFilterValue);\n  const searchContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n\n  return (\n    <List>\n      {searchContacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          <ContactListItem name={name} number={number} />\n          <DeleteBtn type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </DeleteBtn>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  width: 400px;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n  margin: 0 0 12px 0;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  self-align: center;\n  padding: 8px;\n\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.17;\n  letter-spacing: 0.03em;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 8px;\n  margin: 4px 0 0 0;\n  background-color: #fff;\n\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  outline: none;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n\n  &:focus {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { FilterContainer, Label, FilterInput } from './Filter.styled';\nimport { addFilterValue } from 'redux/Contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = ({ target: { value } }) =>\n    dispatch(addFilterValue(value));\n\n  return (\n    <FilterContainer>\n      <Label>\n        Find contacts by name\n        <FilterInput name=\"filter\" onChange={handleFilterChange} />\n      </Label>\n    </FilterContainer>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/Contacts/operations';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilterValue","filter","Form","styled","FormikForm","FormField","Field","FormikField","ErrorMessage","FormikError","Button","ContactFormSchema","Yup","shape","name","matches","min","required","number","max","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","actions","find","toast","resetForm","addContact","component","type","List","Item","NameContainer","ContactName","DeleteBtn","ContactListItem","filterValue","searchContacts","toLowerCase","includes","map","id","onClick","deleteContact","FilterContainer","Label","FilterInput","onChange","value","target","addFilterValue","Contacts","useEffect","fetchContacts"],"sourceRoot":""}